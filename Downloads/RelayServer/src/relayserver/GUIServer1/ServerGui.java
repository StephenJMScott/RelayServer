/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package relayserver.GUIServer1;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;

/**
 *
 * @author hello
 */
public class ServerGui extends javax.swing.JFrame {
private static int port;
public  static Boolean booPortSet = false, booServerSet = false;

    /**
     * Creates new form ServerGui
     */
    public ServerGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblServerSide = new javax.swing.JLabel();
        txtPortField = new javax.swing.JTextField();
        lblPort = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtManipulatedReturn = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtClientMessage = new javax.swing.JTextArea();
        btnSetPort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblServerSide.setFont(new java.awt.Font("Perpetua Titling MT", 1, 12)); // NOI18N
        lblServerSide.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblServerSide.setText("Server Side");

        txtPortField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortFieldActionPerformed(evt);
            }
        });

        lblPort.setText("Port:");

        txtManipulatedReturn.setColumns(20);
        txtManipulatedReturn.setRows(5);
        jScrollPane1.setViewportView(txtManipulatedReturn);

        txtClientMessage.setColumns(20);
        txtClientMessage.setRows(5);
        jScrollPane2.setViewportView(txtClientMessage);

        btnSetPort.setText("Set");
        btnSetPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetPortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addComponent(lblServerSide))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(lblPort)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSetPort)))
                        .addGap(0, 117, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblServerSide)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPort)
                    .addComponent(btnSetPort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(69, 69, 69)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(135, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPortFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPortFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPortFieldActionPerformed

    public static void checkPortAgainAndAgainAndAGAIN(){
        Timer t = new Timer();
        t.schedule(new TimerTask() {
        @Override public void run() {
              //every second this will check and update the textfield.
              checkTextField();
        }
    }, 0L, 1000L);
    }
    
    public static void checkTextField(){
           }
    public static void initServerResponse(){
        
        if(booPortSet){
            try{
            
                
            }catch(Exception e){
                System.out.println("Server Not Available");
            }
        }
    }
    private void btnSetPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetPortActionPerformed
        //Validate txtPortField is both not empty and within a valid range.
        if(txtPortField.getText().length()<5)// Ensuring the port number is within range of 0 - 9999.
                try{ //making sure the port is numeric only. 
                    port = Integer.parseInt(txtPortField.getText());
                    booPortSet=true;
                    ServerSocket ss = new ServerSocket (port);
                    Socket s = ss.accept();
                    System.out.println("Connected");
                    DataInputStream DataInput =  new DataInputStream(s.getInputStream());
                    BufferedReader BR = new BufferedReader(new InputStreamReader(System.in));
                        System.out.println("Sever Set");
             
//            Messages = txtClientMessage.getText();
//            String foo = DataInput.readUTF();
//            txtClientMessage.setText( Messages + "\n" + "Client:" +foo + "\n");
//            Messages += Messages;
                    
                    
                    
                    
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Invalid Port");
                    txtPortField.setText("");
                    txtPortField.requestFocus();
                }
        else{
            JOptionPane.showMessageDialog(this, "Port out of range");
            txtPortField.setText("");
            txtPortField.requestFocus();
        }
       
        
        
        
        
    }//GEN-LAST:event_btnSetPortActionPerformed
                            //not needed for now.
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
            
            
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSetPort;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblServerSide;
    private javax.swing.JTextArea txtClientMessage;
    private javax.swing.JTextArea txtManipulatedReturn;
    private javax.swing.JTextField txtPortField;
    // End of variables declaration//GEN-END:variables
}
